#####################################################
#                                                   #
# DEFORM DREIDING LAMMPS INPUT SCRIPT               #
#                                                   #
#                                                   #
# Execute the script through:                       #
# lmp_exe < in.deform_dreiding.txt                  #
#                                                   #
#####################################################

# VARIABLES DEFINITION

variable fname index PE_nc10_cl1000.dat
variable simname index PE_nc10_cl1000

#       Initialization

units	real
# 	For style real, these are the units:
# 	mass = grams/mole
# 	distance = Angstroms
# 	time = femtoseconds
# 	energy = Kcal/mole
# 	velocity = Angstroms/femtosecond
# 	force = Kcal/mole-Angstrom
# 	torque = Kcal/mole - krutjashchij moment sily
# 	temperature = Kelvin
# 	pressure = atmospheres
# 	dynamic viscosity = Poise
# 	charge = multiple of electron charge (1.0 is a proton)
# 	dipole = charge*Angstroms
# 	electric field = volts/Angstrom
# 	density = gram/cm^dim

boundary p p p
# 	periodic boundary condition

atom_style molecular
# 	define atom style as uncharged molecules
# 	the following addition  attributes are associated with the atoms: 
# 	bonds, angles, dihedrals, impropers

log log.${simname}.txt
# 	open new log file

read_data ${fname}
# 	Read in a data file containing information LAMMPS needs to run a simulation

##################################################################

# 			Dreiding potential information
neighbor	0.4 bin
neigh_modify	every 10 one 10000
bond_style      harmonic
bond_coeff	1 350 1.53
angle_style     harmonic
angle_coeff	1 60 109.5
dihedral_style	multi/harmonic
dihedral_coeff	1 1.73 -4.49 0.776 6.99 0.0
pair_style	lj/cut 10.5
pair_coeff	1 1 0.112 4.01 10.5

#####################################################
# 	Equilibration Stage 1 (Langevin dynamics at 500 K)

velocity all create 500.0 1231
# 	generates an ensemble of velocities using a random number 
# 	generator with the specified seed as the specified temperature
# 	velocity group-ID style args keyword value ...
# 	create args = temp seed
#      	temp = temperature value (temperature units)
#      	seed = random # seed (positive integer)
#      	slychajnoe nachalnoe chislo

fix 1 all nve/limit 0.05
# 	Set a fix that will be applied to a group of atoms
# 	fix ID group-ID style args
#    	ID = user-assigned name for the fix
#    	group-ID = ID of the group of atoms to apply the fix to
#    	style = one of a long list of possible style names (see below)
#    	args = arguments used by a particular style
# 	nve/limit - NVE with limited step length

fix 2 all langevin 500.0 500.0 10.0 904297
# 	langevin - Langevin temperature control
# 	fix ID group-ID langevin Tstart Tstop damp seed keyword values ...
# 	Tstart,Tstop = desired temperature at start/end of run (temperature units)
# 	Tstart can be a variable (see below)
# 	damp = damping parameter (time units)
# 	seed = random number seed to use for white noise (positive integer)
# 	zero or more keyword/value pairs may be appended

thermo_style	custom step temp press
# 	Set the style and content for printing thermodynamic data to the screen and log file.
# 	thermo_style style args
# 	style = one or multi or custom
#      	custom args = list of keywords
#       step = timestep
#       temp = temperature
#       press = pressure

thermo   100
# 	Compute and print thermodynamic info (e.g. temperature, energy, pressure) on timesteps 
# 	that are a multiple of N and at the beginning and end of a simulation. 
# 	A value of 0 will only print thermodynamics at the beginning and end.
# 	thermo N
# 	N = output thermodynamics every N timesteps
# 	N can be a variable

timestep 1
# 	Set the timestep size for subsequent molecular dynamics simulations
# 	timestep dt
# 	dt = timestep size (time units)

run 500
# 	run N keyword values ...
# 	N = # of timesteps
# 	A value of N = 0 is acceptable; only the thermodynamics of the 
# 	system are computed and printed without taking a timestep.


unfix 1
unfix 2
# 	Delete a fix that was previously defined with a fix command.

write_restart 	restart.${simname}.dreiding1
#	write_restart file keyword value ...
# 	Write a binary restart file of the current state of the simulation.

#####################################################
# 	Equilibration Stage 2 (NPT dynamics at 500 K)

fix 1 all npt temp 500.0 500.0 50 iso 0 0 1000 drag 2
# 	npt - constant NPT time integration via Nose/Hoover
# 	These commands perform time integration on Nose-Hoover style non-Hamiltonian 
# 	equations of motion which are designed to generate positions and velocities 
# 	sampled from the isothermal-isobaric (npt). 
# 	This updates the position and velocity for atoms in the group each timestep.
# 	The thermostat parameters for fix styles npt is specified 
# 	using the temp keyword.
#       temp values = Tstart Tstop Tdamp
#       Tdamp = temperature damping parameter (time units)
# 		The keyword iso means couple all 3 diagonal components together when pressure 
# 	is computed (hydrostatic pressure), and dilate/contract the dimensions together.
# 	iso or aniso or tri values = Pstart Pstop Pdamp
#       Pstart,Pstop = scalar external pressure at start/end of run (pressure units)
#       Pdamp = pressure damping parameter (time units)
# 	drag value = Df
#       Df = drag factor added to barostat/thermostat (0.0 = no drag)

fix  2 all momentum 1 linear 1 1 1
# 	momentum - zero the linear and/or angular momentum of a group of atoms
# 	Zero the linear and/or angular momentum of the group of atoms every 
# 	N timesteps by adjusting the velocities of the atoms.
# 	If the linear keyword is used, the linear momentum is zeroed by subtracting 
# 	the center-of-mass velocity of the group from each atom. 
# 	This does not change the relative velocity of any pair of atoms. 
# 	One or more dimensions can be excluded from this operation 
# 	by setting the corresponding flag to 0.

thermo_style	custom step temp press
thermo          100
timestep	0.5
reset_timestep	0
# 	Set the timestep counter to the specified value. 
# 	This command normally comes after the timestep has been set 
# 	by reading a restart file via the read_restart command, 
# 	or a previous simulation advanced the timestep.

run		300
unfix 1
unfix 2
write_restart 	restart.${simname}.dreiding2

#####################################################
# 	Equilibration Stage 3 (NPT dynamics from 500 K --> 100 K)
fix		1 all npt temp 500 100 50 iso 0 0 1000 drag 2
fix		2 all momentum 1 linear 1 1 1
thermo_style	custom step temp press
thermo          10
timestep	0.5
reset_timestep 	0
run		300
unfix 1
unfix 2
write_restart 	restart.${simname}.dreiding3

#####################################################
# 	Equilibration Stage 4 (NPT dynamics at 100 K)
fix		1 all npt temp 100 100 50 iso 0 0 1000 drag 2
fix		2 all momentum 1 linear 1 1 1
thermo_style	custom step temp press epair ebond eangle edihed pxx pyy pzz lx ly lz
thermo          10
timestep	0.5
reset_timestep 	0
run		300
unfix 1
unfix 2
write_restart 	restart.${simname}.dreiding4

#####################################################
# 	Uniaxial Tensile Deformation
run 0
variable tmp equal "lx"
variable L0 equal ${tmp}
variable strain equal "(lx - v_L0)/v_L0"
variable p1 equal "v_strain"
variable p2 equal "-pxx/10000*1.01325"
variable p3 equal "-pyy/10000*1.01325"
variable p4 equal "-pzz/10000*1.01325"
variable p5 equal "lx"
variable p6 equal "ly"
variable p7 equal "lz"
variable p8 equal "temp"
variable t2 equal "epair"
variable t3 equal "ebond"
variable t4 equal "eangle"
variable t5 equal "edihed"
fix 1 all npt temp 100 100 50 y 0 0 1000 z 0 0 1000 drag 2

fix 2 all deform 1 x erate 1e-5 units box remap x
# 	Change the volume and/or shape of the simulation box during a dynamics run. 
# 	fix ID group-ID deform N parameter args ... keyword value ...
# 	N = perform box deformation every this many timesteps
#
# 	The erate styles all change the specified dimension of the box via 
# 	constant displacement which is effectively a constant engineering strain rate. 
# 	This means the box dimension changes linearly with time from its initial to final value.

fix def1 all print 100 "${p1} ${p2} ${p3} ${p4} ${p5} ${p6} ${p7} ${p8}" file ${simname}.def1.txt screen no
fix def2 all print 100 "${p1} ${t2} ${t3} ${t4} ${t5}" file ${simname}.def2.txt screen no
thermo_style	custom step temp pxx pyy pzz lx ly lz epair ebond eangle edihed
thermo          100
timestep	1
reset_timestep	0

# Output strain and stress info to file
variable tmp equal "lx"
variable L0 equal ${tmp}
variable strain equal "(lx - v_L0)/v_L0"
variable p1 equal "v_strain"
variable p2 equal "-pxx/10000*1.01325"
variable p3 equal "-pyy/10000*1.01325"
variable p4 equal "-pzz/10000*1.01325"
variable p5 equal "lx"
variable p6 equal "ly"
variable p7 equal "lz"
variable p8 equal "temp"
variable t2 equal "epair"
variable t3 equal "ebond"
variable t4 equal "eangle"
variable t5 equal "edihed"
fix def1 all print 100 "${p1} ${p2} ${p3} ${p4} ${p5} ${p6} ${p7} ${p8}" file ${simname}.def1.txt
fix def2 all print 100 "${p1} ${t2} ${t3} ${t4} ${t5}" file ${simname}.def2.txt screen no screen no

# Use cfg for AtomEye
dump     id all atom 100 dump.POLcomp.
run		300

unfix 1
unfix 2
unfix def1
unfix def2

print "All done"
